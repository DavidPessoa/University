Terminals unused in grammar

   COMMA
   SEMICOLON
   DOT


State 99 conflicts: 3 shift/reduce


Grammar

    0 $accept: program $end

    1 program: gdeclpar

    2 gdeclpar: PARE gdecl PARD
    3         | more_gdecl

    4 more_gdecl: gdeclpar PARE gdecl PARD

    5 gdecl: function
    6      | var

    7 var: VAR PARE ID NAME VAR type PARD more_expressions
    8    | VAR PARE ID NAME VAR type PARD NIL

    9 function: FUN NAME PARRE more_formal_arg PARRD PARE BODY PARRE more_decl PARRD body PARD

   10 body: statementpar more_expressions
   11     | NIL more_expressions
   12     | statementpar NIL

   13 formal_arg: ARG NAME type

   14 more_formal_arg: PARE formal_arg PARD more_formal_arg
   15                | %empty

   16 op: OR
   17   | AND
   18   | EQ
   19   | NE
   20   | LT
   21   | LE
   22   | GT
   23   | GE
   24   | PLUS
   25   | MINUS
   26   | TIMES
   27   | DIV
   28   | MOD
   29   | NOT
   30   | INV

   31 statementpar: PARE statement PARD
   32             | PARRE more_statements PARRD
   33             | NIL

   34 statement: ASSIGN PARE ID NAME scope type PARD more_expressions
   35          | WHILE more_expressions statementpar
   36          | IF more_expressions statementpar statementpar
   37          | CALL NAME more_expressions
   38          | PRINT expression

   39 more_statements: statementpar PARE statement PARD
   40                | statementpar more_statements

   41 expression2: expression
   42            | %empty

   43 more_expressions: PARRE expression expression2 PARRD
   44                 | expression

   45 expression: PARE op expression expression PARD TWODOT type
   46           | PARE INT_LITERAL INTEGER PARD TWODOT type
   47           | PARE REAL_LITERAL REAL PARD TWODOT type
   48           | PARE BOOL bool_val PARD TWODOT type
   49           | PARE ID NAME scope type PARD TWODOT type
   50           | PARE CALL NAME more_expressions PARD TWODOT type
   51           | PARE TOREAL expression PARD TWODOT type
   52           | TOREAL expression

   53 more_decl: PARE declaration PARD more_decl
   54          | %empty

   55 declaration: scope NAME type NIL
   56            | scope NAME type more_expressions
   57            | %empty

   58 bool_val: TRUE
   59         | FALSE

   60 scope: LOCAL
   61      | VAR
   62      | ARG

   63 type: INT
   64     | BOOL
   65     | REAL


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER (258) 46
NAME (259) 7 8 9 13 34 37 49 50 55 56
ID (260) 7 8 34 49
PARRE (261) 9 32 43
PARRD (262) 9 32 43
PARE (263) 2 4 7 8 9 14 31 34 39 45 46 47 48 49 50 51 53
PARD (264) 2 4 7 8 9 14 31 34 39 45 46 47 48 49 50 51 53
COMMA (265)
SEMICOLON (266)
TWODOT (267) 45 46 47 48 49 50 51
DOT (268)
VAR (269) 7 8 61
LOCAL (270) 60
ARG (271) 13 62
FUN (272) 9
BODY (273) 9
CALL (274) 37 50
PRINT (275) 38
IF (276) 36
WHILE (277) 35
OR (278) 16
AND (279) 17
EQ (280) 18
NE (281) 19
LT (282) 20
LE (283) 21
GT (284) 22
GE (285) 23
PLUS (286) 24
MINUS (287) 25
TIMES (288) 26
DIV (289) 27
MOD (290) 28
NOT (291) 29
INV (292) 30
INT_LITERAL (293) 46
REAL_LITERAL (294) 47
TRUE (295) 58
FALSE (296) 59
TOREAL (297) 51 52
INT (298) 63
REAL (299) 47 65
BOOL (300) 48 64
ASSIGN (301) 34
NIL (302) 8 11 12 33 55


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
gdeclpar (50)
    on left: 2 3, on right: 1 4
more_gdecl (51)
    on left: 4, on right: 3
gdecl (52)
    on left: 5 6, on right: 2 4
var (53)
    on left: 7 8, on right: 6
function (54)
    on left: 9, on right: 5
body (55)
    on left: 10 11 12, on right: 9
formal_arg (56)
    on left: 13, on right: 14
more_formal_arg (57)
    on left: 14 15, on right: 9 14
op (58)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30, on right:
    45
statementpar (59)
    on left: 31 32 33, on right: 10 12 35 36 39 40
statement (60)
    on left: 34 35 36 37 38, on right: 31 39
more_statements (61)
    on left: 39 40, on right: 32 40
expression2 (62)
    on left: 41 42, on right: 43
more_expressions (63)
    on left: 43 44, on right: 7 10 11 34 35 36 37 50 56
expression (64)
    on left: 45 46 47 48 49 50 51 52, on right: 38 41 43 44 45 51 52
more_decl (65)
    on left: 53 54, on right: 9 53
declaration (66)
    on left: 55 56 57, on right: 53
bool_val (67)
    on left: 58 59, on right: 48
scope (68)
    on left: 60 61 62, on right: 34 49 55 56
type (69)
    on left: 63 64 65, on right: 7 8 13 34 45 46 47 48 49 50 51 55
    56


State 0

    0 $accept: . program $end

    PARE  shift, and go to state 1

    program     go to state 2
    gdeclpar    go to state 3
    more_gdecl  go to state 4


State 1

    2 gdeclpar: PARE . gdecl PARD

    VAR  shift, and go to state 5
    FUN  shift, and go to state 6

    gdecl     go to state 7
    var       go to state 8
    function  go to state 9


State 2

    0 $accept: program . $end

    $end  shift, and go to state 10


State 3

    1 program: gdeclpar .
    4 more_gdecl: gdeclpar . PARE gdecl PARD

    PARE  shift, and go to state 11

    $default  reduce using rule 1 (program)


State 4

    3 gdeclpar: more_gdecl .

    $default  reduce using rule 3 (gdeclpar)


State 5

    7 var: VAR . PARE ID NAME VAR type PARD more_expressions
    8    | VAR . PARE ID NAME VAR type PARD NIL

    PARE  shift, and go to state 12


State 6

    9 function: FUN . NAME PARRE more_formal_arg PARRD PARE BODY PARRE more_decl PARRD body PARD

    NAME  shift, and go to state 13


State 7

    2 gdeclpar: PARE gdecl . PARD

    PARD  shift, and go to state 14


State 8

    6 gdecl: var .

    $default  reduce using rule 6 (gdecl)


State 9

    5 gdecl: function .

    $default  reduce using rule 5 (gdecl)


State 10

    0 $accept: program $end .

    $default  accept


State 11

    4 more_gdecl: gdeclpar PARE . gdecl PARD

    VAR  shift, and go to state 5
    FUN  shift, and go to state 6

    gdecl     go to state 15
    var       go to state 8
    function  go to state 9


State 12

    7 var: VAR PARE . ID NAME VAR type PARD more_expressions
    8    | VAR PARE . ID NAME VAR type PARD NIL

    ID  shift, and go to state 16


State 13

    9 function: FUN NAME . PARRE more_formal_arg PARRD PARE BODY PARRE more_decl PARRD body PARD

    PARRE  shift, and go to state 17


State 14

    2 gdeclpar: PARE gdecl PARD .

    $default  reduce using rule 2 (gdeclpar)


State 15

    4 more_gdecl: gdeclpar PARE gdecl . PARD

    PARD  shift, and go to state 18


State 16

    7 var: VAR PARE ID . NAME VAR type PARD more_expressions
    8    | VAR PARE ID . NAME VAR type PARD NIL

    NAME  shift, and go to state 19


State 17

    9 function: FUN NAME PARRE . more_formal_arg PARRD PARE BODY PARRE more_decl PARRD body PARD

    PARE  shift, and go to state 20

    $default  reduce using rule 15 (more_formal_arg)

    more_formal_arg  go to state 21


State 18

    4 more_gdecl: gdeclpar PARE gdecl PARD .

    $default  reduce using rule 4 (more_gdecl)


State 19

    7 var: VAR PARE ID NAME . VAR type PARD more_expressions
    8    | VAR PARE ID NAME . VAR type PARD NIL

    VAR  shift, and go to state 22


State 20

   14 more_formal_arg: PARE . formal_arg PARD more_formal_arg

    ARG  shift, and go to state 23

    formal_arg  go to state 24


State 21

    9 function: FUN NAME PARRE more_formal_arg . PARRD PARE BODY PARRE more_decl PARRD body PARD

    PARRD  shift, and go to state 25


State 22

    7 var: VAR PARE ID NAME VAR . type PARD more_expressions
    8    | VAR PARE ID NAME VAR . type PARD NIL

    INT   shift, and go to state 26
    REAL  shift, and go to state 27
    BOOL  shift, and go to state 28

    type  go to state 29


State 23

   13 formal_arg: ARG . NAME type

    NAME  shift, and go to state 30


State 24

   14 more_formal_arg: PARE formal_arg . PARD more_formal_arg

    PARD  shift, and go to state 31


State 25

    9 function: FUN NAME PARRE more_formal_arg PARRD . PARE BODY PARRE more_decl PARRD body PARD

    PARE  shift, and go to state 32


State 26

   63 type: INT .

    $default  reduce using rule 63 (type)


State 27

   65 type: REAL .

    $default  reduce using rule 65 (type)


State 28

   64 type: BOOL .

    $default  reduce using rule 64 (type)


State 29

    7 var: VAR PARE ID NAME VAR type . PARD more_expressions
    8    | VAR PARE ID NAME VAR type . PARD NIL

    PARD  shift, and go to state 33


State 30

   13 formal_arg: ARG NAME . type

    INT   shift, and go to state 26
    REAL  shift, and go to state 27
    BOOL  shift, and go to state 28

    type  go to state 34


State 31

   14 more_formal_arg: PARE formal_arg PARD . more_formal_arg

    PARE  shift, and go to state 20

    $default  reduce using rule 15 (more_formal_arg)

    more_formal_arg  go to state 35


State 32

    9 function: FUN NAME PARRE more_formal_arg PARRD PARE . BODY PARRE more_decl PARRD body PARD

    BODY  shift, and go to state 36


State 33

    7 var: VAR PARE ID NAME VAR type PARD . more_expressions
    8    | VAR PARE ID NAME VAR type PARD . NIL

    PARRE   shift, and go to state 37
    PARE    shift, and go to state 38
    TOREAL  shift, and go to state 39
    NIL     shift, and go to state 40

    more_expressions  go to state 41
    expression        go to state 42


State 34

   13 formal_arg: ARG NAME type .

    $default  reduce using rule 13 (formal_arg)


State 35

   14 more_formal_arg: PARE formal_arg PARD more_formal_arg .

    $default  reduce using rule 14 (more_formal_arg)


State 36

    9 function: FUN NAME PARRE more_formal_arg PARRD PARE BODY . PARRE more_decl PARRD body PARD

    PARRE  shift, and go to state 43


State 37

   43 more_expressions: PARRE . expression expression2 PARRD

    PARE    shift, and go to state 38
    TOREAL  shift, and go to state 39

    expression  go to state 44


State 38

   45 expression: PARE . op expression expression PARD TWODOT type
   46           | PARE . INT_LITERAL INTEGER PARD TWODOT type
   47           | PARE . REAL_LITERAL REAL PARD TWODOT type
   48           | PARE . BOOL bool_val PARD TWODOT type
   49           | PARE . ID NAME scope type PARD TWODOT type
   50           | PARE . CALL NAME more_expressions PARD TWODOT type
   51           | PARE . TOREAL expression PARD TWODOT type

    ID            shift, and go to state 45
    CALL          shift, and go to state 46
    OR            shift, and go to state 47
    AND           shift, and go to state 48
    EQ            shift, and go to state 49
    NE            shift, and go to state 50
    LT            shift, and go to state 51
    LE            shift, and go to state 52
    GT            shift, and go to state 53
    GE            shift, and go to state 54
    PLUS          shift, and go to state 55
    MINUS         shift, and go to state 56
    TIMES         shift, and go to state 57
    DIV           shift, and go to state 58
    MOD           shift, and go to state 59
    NOT           shift, and go to state 60
    INV           shift, and go to state 61
    INT_LITERAL   shift, and go to state 62
    REAL_LITERAL  shift, and go to state 63
    TOREAL        shift, and go to state 64
    BOOL          shift, and go to state 65

    op  go to state 66


State 39

   52 expression: TOREAL . expression

    PARE    shift, and go to state 38
    TOREAL  shift, and go to state 39

    expression  go to state 67


State 40

    8 var: VAR PARE ID NAME VAR type PARD NIL .

    $default  reduce using rule 8 (var)


State 41

    7 var: VAR PARE ID NAME VAR type PARD more_expressions .

    $default  reduce using rule 7 (var)


State 42

   44 more_expressions: expression .

    $default  reduce using rule 44 (more_expressions)


State 43

    9 function: FUN NAME PARRE more_formal_arg PARRD PARE BODY PARRE . more_decl PARRD body PARD

    PARE  shift, and go to state 68

    $default  reduce using rule 54 (more_decl)

    more_decl  go to state 69


State 44

   43 more_expressions: PARRE expression . expression2 PARRD

    PARE    shift, and go to state 38
    TOREAL  shift, and go to state 39

    $default  reduce using rule 42 (expression2)

    expression2  go to state 70
    expression   go to state 71


State 45

   49 expression: PARE ID . NAME scope type PARD TWODOT type

    NAME  shift, and go to state 72


State 46

   50 expression: PARE CALL . NAME more_expressions PARD TWODOT type

    NAME  shift, and go to state 73


State 47

   16 op: OR .

    $default  reduce using rule 16 (op)


State 48

   17 op: AND .

    $default  reduce using rule 17 (op)


State 49

   18 op: EQ .

    $default  reduce using rule 18 (op)


State 50

   19 op: NE .

    $default  reduce using rule 19 (op)


State 51

   20 op: LT .

    $default  reduce using rule 20 (op)


State 52

   21 op: LE .

    $default  reduce using rule 21 (op)


State 53

   22 op: GT .

    $default  reduce using rule 22 (op)


State 54

   23 op: GE .

    $default  reduce using rule 23 (op)


State 55

   24 op: PLUS .

    $default  reduce using rule 24 (op)


State 56

   25 op: MINUS .

    $default  reduce using rule 25 (op)


State 57

   26 op: TIMES .

    $default  reduce using rule 26 (op)


State 58

   27 op: DIV .

    $default  reduce using rule 27 (op)


State 59

   28 op: MOD .

    $default  reduce using rule 28 (op)


State 60

   29 op: NOT .

    $default  reduce using rule 29 (op)


State 61

   30 op: INV .

    $default  reduce using rule 30 (op)


State 62

   46 expression: PARE INT_LITERAL . INTEGER PARD TWODOT type

    INTEGER  shift, and go to state 74


State 63

   47 expression: PARE REAL_LITERAL . REAL PARD TWODOT type

    REAL  shift, and go to state 75


State 64

   51 expression: PARE TOREAL . expression PARD TWODOT type

    PARE    shift, and go to state 38
    TOREAL  shift, and go to state 39

    expression  go to state 76


State 65

   48 expression: PARE BOOL . bool_val PARD TWODOT type

    TRUE   shift, and go to state 77
    FALSE  shift, and go to state 78

    bool_val  go to state 79


State 66

   45 expression: PARE op . expression expression PARD TWODOT type

    PARE    shift, and go to state 38
    TOREAL  shift, and go to state 39

    expression  go to state 80


State 67

   52 expression: TOREAL expression .

    $default  reduce using rule 52 (expression)


State 68

   53 more_decl: PARE . declaration PARD more_decl

    VAR    shift, and go to state 81
    LOCAL  shift, and go to state 82
    ARG    shift, and go to state 83

    $default  reduce using rule 57 (declaration)

    declaration  go to state 84
    scope        go to state 85


State 69

    9 function: FUN NAME PARRE more_formal_arg PARRD PARE BODY PARRE more_decl . PARRD body PARD

    PARRD  shift, and go to state 86


State 70

   43 more_expressions: PARRE expression expression2 . PARRD

    PARRD  shift, and go to state 87


State 71

   41 expression2: expression .

    $default  reduce using rule 41 (expression2)


State 72

   49 expression: PARE ID NAME . scope type PARD TWODOT type

    VAR    shift, and go to state 81
    LOCAL  shift, and go to state 82
    ARG    shift, and go to state 83

    scope  go to state 88


State 73

   50 expression: PARE CALL NAME . more_expressions PARD TWODOT type

    PARRE   shift, and go to state 37
    PARE    shift, and go to state 38
    TOREAL  shift, and go to state 39

    more_expressions  go to state 89
    expression        go to state 42


State 74

   46 expression: PARE INT_LITERAL INTEGER . PARD TWODOT type

    PARD  shift, and go to state 90


State 75

   47 expression: PARE REAL_LITERAL REAL . PARD TWODOT type

    PARD  shift, and go to state 91


State 76

   51 expression: PARE TOREAL expression . PARD TWODOT type

    PARD  shift, and go to state 92


State 77

   58 bool_val: TRUE .

    $default  reduce using rule 58 (bool_val)


State 78

   59 bool_val: FALSE .

    $default  reduce using rule 59 (bool_val)


State 79

   48 expression: PARE BOOL bool_val . PARD TWODOT type

    PARD  shift, and go to state 93


State 80

   45 expression: PARE op expression . expression PARD TWODOT type

    PARE    shift, and go to state 38
    TOREAL  shift, and go to state 39

    expression  go to state 94


State 81

   61 scope: VAR .

    $default  reduce using rule 61 (scope)


State 82

   60 scope: LOCAL .

    $default  reduce using rule 60 (scope)


State 83

   62 scope: ARG .

    $default  reduce using rule 62 (scope)


State 84

   53 more_decl: PARE declaration . PARD more_decl

    PARD  shift, and go to state 95


State 85

   55 declaration: scope . NAME type NIL
   56            | scope . NAME type more_expressions

    NAME  shift, and go to state 96


State 86

    9 function: FUN NAME PARRE more_formal_arg PARRD PARE BODY PARRE more_decl PARRD . body PARD

    PARRE  shift, and go to state 97
    PARE   shift, and go to state 98
    NIL    shift, and go to state 99

    body          go to state 100
    statementpar  go to state 101


State 87

   43 more_expressions: PARRE expression expression2 PARRD .

    $default  reduce using rule 43 (more_expressions)


State 88

   49 expression: PARE ID NAME scope . type PARD TWODOT type

    INT   shift, and go to state 26
    REAL  shift, and go to state 27
    BOOL  shift, and go to state 28

    type  go to state 102


State 89

   50 expression: PARE CALL NAME more_expressions . PARD TWODOT type

    PARD  shift, and go to state 103


State 90

   46 expression: PARE INT_LITERAL INTEGER PARD . TWODOT type

    TWODOT  shift, and go to state 104


State 91

   47 expression: PARE REAL_LITERAL REAL PARD . TWODOT type

    TWODOT  shift, and go to state 105


State 92

   51 expression: PARE TOREAL expression PARD . TWODOT type

    TWODOT  shift, and go to state 106


State 93

   48 expression: PARE BOOL bool_val PARD . TWODOT type

    TWODOT  shift, and go to state 107


State 94

   45 expression: PARE op expression expression . PARD TWODOT type

    PARD  shift, and go to state 108


State 95

   53 more_decl: PARE declaration PARD . more_decl

    PARE  shift, and go to state 68

    $default  reduce using rule 54 (more_decl)

    more_decl  go to state 109


State 96

   55 declaration: scope NAME . type NIL
   56            | scope NAME . type more_expressions

    INT   shift, and go to state 26
    REAL  shift, and go to state 27
    BOOL  shift, and go to state 28

    type  go to state 110


State 97

   32 statementpar: PARRE . more_statements PARRD

    PARRE  shift, and go to state 97
    PARE   shift, and go to state 98
    NIL    shift, and go to state 111

    statementpar     go to state 112
    more_statements  go to state 113


State 98

   31 statementpar: PARE . statement PARD

    CALL    shift, and go to state 114
    PRINT   shift, and go to state 115
    IF      shift, and go to state 116
    WHILE   shift, and go to state 117
    ASSIGN  shift, and go to state 118

    statement  go to state 119


State 99

   11 body: NIL . more_expressions
   33 statementpar: NIL .

    PARRE   shift, and go to state 37
    PARE    shift, and go to state 38
    TOREAL  shift, and go to state 39

    PARRE     [reduce using rule 33 (statementpar)]
    PARE      [reduce using rule 33 (statementpar)]
    TOREAL    [reduce using rule 33 (statementpar)]
    $default  reduce using rule 33 (statementpar)

    more_expressions  go to state 120
    expression        go to state 42


State 100

    9 function: FUN NAME PARRE more_formal_arg PARRD PARE BODY PARRE more_decl PARRD body . PARD

    PARD  shift, and go to state 121


State 101

   10 body: statementpar . more_expressions
   12     | statementpar . NIL

    PARRE   shift, and go to state 37
    PARE    shift, and go to state 38
    TOREAL  shift, and go to state 39
    NIL     shift, and go to state 122

    more_expressions  go to state 123
    expression        go to state 42


State 102

   49 expression: PARE ID NAME scope type . PARD TWODOT type

    PARD  shift, and go to state 124


State 103

   50 expression: PARE CALL NAME more_expressions PARD . TWODOT type

    TWODOT  shift, and go to state 125


State 104

   46 expression: PARE INT_LITERAL INTEGER PARD TWODOT . type

    INT   shift, and go to state 26
    REAL  shift, and go to state 27
    BOOL  shift, and go to state 28

    type  go to state 126


State 105

   47 expression: PARE REAL_LITERAL REAL PARD TWODOT . type

    INT   shift, and go to state 26
    REAL  shift, and go to state 27
    BOOL  shift, and go to state 28

    type  go to state 127


State 106

   51 expression: PARE TOREAL expression PARD TWODOT . type

    INT   shift, and go to state 26
    REAL  shift, and go to state 27
    BOOL  shift, and go to state 28

    type  go to state 128


State 107

   48 expression: PARE BOOL bool_val PARD TWODOT . type

    INT   shift, and go to state 26
    REAL  shift, and go to state 27
    BOOL  shift, and go to state 28

    type  go to state 129


State 108

   45 expression: PARE op expression expression PARD . TWODOT type

    TWODOT  shift, and go to state 130


State 109

   53 more_decl: PARE declaration PARD more_decl .

    $default  reduce using rule 53 (more_decl)


State 110

   55 declaration: scope NAME type . NIL
   56            | scope NAME type . more_expressions

    PARRE   shift, and go to state 37
    PARE    shift, and go to state 38
    TOREAL  shift, and go to state 39
    NIL     shift, and go to state 131

    more_expressions  go to state 132
    expression        go to state 42


State 111

   33 statementpar: NIL .

    $default  reduce using rule 33 (statementpar)


State 112

   39 more_statements: statementpar . PARE statement PARD
   40                | statementpar . more_statements

    PARRE  shift, and go to state 97
    PARE   shift, and go to state 133
    NIL    shift, and go to state 111

    statementpar     go to state 112
    more_statements  go to state 134


State 113

   32 statementpar: PARRE more_statements . PARRD

    PARRD  shift, and go to state 135


State 114

   37 statement: CALL . NAME more_expressions

    NAME  shift, and go to state 136


State 115

   38 statement: PRINT . expression

    PARE    shift, and go to state 38
    TOREAL  shift, and go to state 39

    expression  go to state 137


State 116

   36 statement: IF . more_expressions statementpar statementpar

    PARRE   shift, and go to state 37
    PARE    shift, and go to state 38
    TOREAL  shift, and go to state 39

    more_expressions  go to state 138
    expression        go to state 42


State 117

   35 statement: WHILE . more_expressions statementpar

    PARRE   shift, and go to state 37
    PARE    shift, and go to state 38
    TOREAL  shift, and go to state 39

    more_expressions  go to state 139
    expression        go to state 42


State 118

   34 statement: ASSIGN . PARE ID NAME scope type PARD more_expressions

    PARE  shift, and go to state 140


State 119

   31 statementpar: PARE statement . PARD

    PARD  shift, and go to state 141


State 120

   11 body: NIL more_expressions .

    $default  reduce using rule 11 (body)


State 121

    9 function: FUN NAME PARRE more_formal_arg PARRD PARE BODY PARRE more_decl PARRD body PARD .

    $default  reduce using rule 9 (function)


State 122

   12 body: statementpar NIL .

    $default  reduce using rule 12 (body)


State 123

   10 body: statementpar more_expressions .

    $default  reduce using rule 10 (body)


State 124

   49 expression: PARE ID NAME scope type PARD . TWODOT type

    TWODOT  shift, and go to state 142


State 125

   50 expression: PARE CALL NAME more_expressions PARD TWODOT . type

    INT   shift, and go to state 26
    REAL  shift, and go to state 27
    BOOL  shift, and go to state 28

    type  go to state 143


State 126

   46 expression: PARE INT_LITERAL INTEGER PARD TWODOT type .

    $default  reduce using rule 46 (expression)


State 127

   47 expression: PARE REAL_LITERAL REAL PARD TWODOT type .

    $default  reduce using rule 47 (expression)


State 128

   51 expression: PARE TOREAL expression PARD TWODOT type .

    $default  reduce using rule 51 (expression)


State 129

   48 expression: PARE BOOL bool_val PARD TWODOT type .

    $default  reduce using rule 48 (expression)


State 130

   45 expression: PARE op expression expression PARD TWODOT . type

    INT   shift, and go to state 26
    REAL  shift, and go to state 27
    BOOL  shift, and go to state 28

    type  go to state 144


State 131

   55 declaration: scope NAME type NIL .

    $default  reduce using rule 55 (declaration)


State 132

   56 declaration: scope NAME type more_expressions .

    $default  reduce using rule 56 (declaration)


State 133

   31 statementpar: PARE . statement PARD
   39 more_statements: statementpar PARE . statement PARD

    CALL    shift, and go to state 114
    PRINT   shift, and go to state 115
    IF      shift, and go to state 116
    WHILE   shift, and go to state 117
    ASSIGN  shift, and go to state 118

    statement  go to state 145


State 134

   40 more_statements: statementpar more_statements .

    $default  reduce using rule 40 (more_statements)


State 135

   32 statementpar: PARRE more_statements PARRD .

    $default  reduce using rule 32 (statementpar)


State 136

   37 statement: CALL NAME . more_expressions

    PARRE   shift, and go to state 37
    PARE    shift, and go to state 38
    TOREAL  shift, and go to state 39

    more_expressions  go to state 146
    expression        go to state 42


State 137

   38 statement: PRINT expression .

    $default  reduce using rule 38 (statement)


State 138

   36 statement: IF more_expressions . statementpar statementpar

    PARRE  shift, and go to state 97
    PARE   shift, and go to state 98
    NIL    shift, and go to state 111

    statementpar  go to state 147


State 139

   35 statement: WHILE more_expressions . statementpar

    PARRE  shift, and go to state 97
    PARE   shift, and go to state 98
    NIL    shift, and go to state 111

    statementpar  go to state 148


State 140

   34 statement: ASSIGN PARE . ID NAME scope type PARD more_expressions

    ID  shift, and go to state 149


State 141

   31 statementpar: PARE statement PARD .

    $default  reduce using rule 31 (statementpar)


State 142

   49 expression: PARE ID NAME scope type PARD TWODOT . type

    INT   shift, and go to state 26
    REAL  shift, and go to state 27
    BOOL  shift, and go to state 28

    type  go to state 150


State 143

   50 expression: PARE CALL NAME more_expressions PARD TWODOT type .

    $default  reduce using rule 50 (expression)


State 144

   45 expression: PARE op expression expression PARD TWODOT type .

    $default  reduce using rule 45 (expression)


State 145

   31 statementpar: PARE statement . PARD
   39 more_statements: statementpar PARE statement . PARD

    PARD  shift, and go to state 151


State 146

   37 statement: CALL NAME more_expressions .

    $default  reduce using rule 37 (statement)


State 147

   36 statement: IF more_expressions statementpar . statementpar

    PARRE  shift, and go to state 97
    PARE   shift, and go to state 98
    NIL    shift, and go to state 111

    statementpar  go to state 152


State 148

   35 statement: WHILE more_expressions statementpar .

    $default  reduce using rule 35 (statement)


State 149

   34 statement: ASSIGN PARE ID . NAME scope type PARD more_expressions

    NAME  shift, and go to state 153


State 150

   49 expression: PARE ID NAME scope type PARD TWODOT type .

    $default  reduce using rule 49 (expression)


State 151

   31 statementpar: PARE statement PARD .
   39 more_statements: statementpar PARE statement PARD .

    PARRD     reduce using rule 39 (more_statements)
    $default  reduce using rule 31 (statementpar)


State 152

   36 statement: IF more_expressions statementpar statementpar .

    $default  reduce using rule 36 (statement)


State 153

   34 statement: ASSIGN PARE ID NAME . scope type PARD more_expressions

    VAR    shift, and go to state 81
    LOCAL  shift, and go to state 82
    ARG    shift, and go to state 83

    scope  go to state 154


State 154

   34 statement: ASSIGN PARE ID NAME scope . type PARD more_expressions

    INT   shift, and go to state 26
    REAL  shift, and go to state 27
    BOOL  shift, and go to state 28

    type  go to state 155


State 155

   34 statement: ASSIGN PARE ID NAME scope type . PARD more_expressions

    PARD  shift, and go to state 156


State 156

   34 statement: ASSIGN PARE ID NAME scope type PARD . more_expressions

    PARRE   shift, and go to state 37
    PARE    shift, and go to state 38
    TOREAL  shift, and go to state 39

    more_expressions  go to state 157
    expression        go to state 42


State 157

   34 statement: ASSIGN PARE ID NAME scope type PARD more_expressions .

    $default  reduce using rule 34 (statement)
